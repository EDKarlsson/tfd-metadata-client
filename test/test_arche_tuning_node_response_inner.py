# coding: utf-8

"""
    The First Descendant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tfd_metadata_client.models.arche_tuning_node_response_inner import ArcheTuningNodeResponseInner

class TestArcheTuningNodeResponseInner(unittest.TestCase):
    """ArcheTuningNodeResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ArcheTuningNodeResponseInner:
        """Test ArcheTuningNodeResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ArcheTuningNodeResponseInner`
        """
        model = ArcheTuningNodeResponseInner()
        if include_optional:
            return ArcheTuningNodeResponseInner(
                node_id = '',
                node_name = '',
                node_image_url = '',
                node_type = '',
                tier_id = '',
                required_tuning_point = 1.337,
                node_effect = [
                    tfd_metadata_client.models.arche_tuning_node_response_inner_node_effect_inner.ArcheTuningNodeResponse_inner_node_effect_inner(
                        stat_id = '', 
                        stat_value = 1.337, 
                        operator_type = '', )
                    ]
            )
        else:
            return ArcheTuningNodeResponseInner(
        )
        """

    def testArcheTuningNodeResponseInner(self):
        """Test ArcheTuningNodeResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
