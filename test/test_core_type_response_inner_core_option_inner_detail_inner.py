# coding: utf-8

"""
    The First Descendant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tfd_metadata_client.models.core_type_response_inner_core_option_inner_detail_inner import CoreTypeResponseInnerCoreOptionInnerDetailInner

class TestCoreTypeResponseInnerCoreOptionInnerDetailInner(unittest.TestCase):
    """CoreTypeResponseInnerCoreOptionInnerDetailInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoreTypeResponseInnerCoreOptionInnerDetailInner:
        """Test CoreTypeResponseInnerCoreOptionInnerDetailInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoreTypeResponseInnerCoreOptionInnerDetailInner`
        """
        model = CoreTypeResponseInnerCoreOptionInnerDetailInner()
        if include_optional:
            return CoreTypeResponseInnerCoreOptionInnerDetailInner(
                core_option_grade = 1.337,
                required_core_item = tfd_metadata_client.models.core_type_response_inner_core_option_inner_detail_inner_required_core_item.CoreTypeResponse_inner_core_option_inner_detail_inner_required_core_item(
                    meta_type = '', 
                    meta_id = '', 
                    count = 1.337, )
            )
        else:
            return CoreTypeResponseInnerCoreOptionInnerDetailInner(
        )
        """

    def testCoreTypeResponseInnerCoreOptionInnerDetailInner(self):
        """Test CoreTypeResponseInnerCoreOptionInnerDetailInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
