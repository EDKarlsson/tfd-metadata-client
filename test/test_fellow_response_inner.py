# coding: utf-8

"""
    The First Descendant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tfd_metadata_client.models.fellow_response_inner import FellowResponseInner

class TestFellowResponseInner(unittest.TestCase):
    """FellowResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FellowResponseInner:
        """Test FellowResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FellowResponseInner`
        """
        model = FellowResponseInner()
        if include_optional:
            return FellowResponseInner(
                fellow_id = '',
                fellow_name = '',
                fellow_tier_id = '',
                fellow_detail = [
                    tfd_metadata_client.models.fellow_response_inner_fellow_detail_inner.FellowResponse_inner_fellow_detail_inner(
                        fellow_level = 1.337, 
                        search_radius_value = 1.337, 
                        stat_effect = [
                            tfd_metadata_client.models.fellow_response_inner_fellow_detail_inner_stat_effect_inner.FellowResponse_inner_fellow_detail_inner_stat_effect_inner(
                                stat_id = '', 
                                stat_value = 1.337, )
                            ], )
                    ]
            )
        else:
            return FellowResponseInner(
        )
        """

    def testFellowResponseInner(self):
        """Test FellowResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
